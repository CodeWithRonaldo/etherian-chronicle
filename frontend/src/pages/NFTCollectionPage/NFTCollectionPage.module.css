.container {
  padding: var(--space-6) 0;
  max-width: 1200px;
  margin: 0 auto;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: var(--space-8);
  padding: var(--space-6);
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-xl);
}

@media (max-width: 768px) {
  .header {
    flex-direction: column;
    align-items: center;
    text-align: center;
    gap: var(--space-4);
  }
}

.headerContent {
  flex: 1;
}

.title {
  font-size: var(--font-size-3xl);
  font-weight: var(--font-weight-bold);
  color: var(--text-primary);
  margin-bottom: var(--space-3);
}

.subtitle {
  font-size: var(--font-size-lg);
  color: var(--text-secondary);
  line-height: var(--line-height-relaxed);
}

.headerStats {
  display: flex;
  gap: var(--space-4);
}

.statItem {
  text-align: center;
}

.statValue {
  font-size: var(--font-size-2xl);
  font-weight: var(--font-weight-bold);
  color: var(--primary-500);
  margin-bottom: var(--space-1);
}

.statLabel {
  font-size: var(--font-size-sm);
  color: var(--text-secondary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
}

.statsGrid {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: var(--space-4);
  margin-bottom: var(--space-8);
}

@media (max-width: 768px) {
  .statsGrid {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media (max-width: 480px) {
  .statsGrid {
    grid-template-columns: 1fr;
  }
}

.rarityCount {
  font-size: var(--font-size-xl);
  font-weight: var(--font-weight-bold);
  color: var(--text-primary);
  margin-bottom: var(--space-2);
}

.filters {
  display: flex;
  gap: var(--space-4);
  align-items: center;
  margin-bottom: var(--space-8);
  padding: var(--space-4);
  background-color: var(--bg-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-xl);
  flex-wrap: wrap;
}

.filterGroup {
  display: flex;
  align-items: center;
  gap: var(--space-2);
}

.filterLabel {
  font-size: var(--font-size-sm);
  font-weight: var(--font-weight-medium);
  color: var(--text-secondary);
  white-space: nowrap;
}

.select {
  padding: var(--space-2) var(--space-3);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-lg);
  background-color: var(--bg-primary);
  color: var(--text-primary);
  font-size: var(--font-size-sm);
  min-width: 140px;
}

.select:focus {
  outline: none;
  border-color: var(--primary-500);
  box-shadow: 0 0 0 3px var(--primary-100);
}

[data-theme="dark"] .select:focus {
  box-shadow: 0 0 0 3px var(--primary-900);
}

.nftGrid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
  gap: var(--space-6);
}

.nftCard {
  transition: all var(--transition-normal);
  cursor: pointer;
}

.nftCard:hover {
  transform: translateY(-4px);
  box-shadow: var(--shadow-xl);
}

.nftHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  margin-bottom: var(--space-3);
  gap: var(--space-2);
}

.nftName {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  line-height: var(--line-height-tight);
  flex: 1;
}

.nftDescription {
  color: var(--text-secondary);
  font-size: var(--font-size-sm);
  line-height: var(--line-height-relaxed);
  margin-bottom: var(--space-4);
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.nftMeta {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: auto;
}

.nftDate {
  font-size: var(--font-size-xs);
  color: var(--text-tertiary);
}

.storyLink {
  font-size: var(--font-size-xs);
  color: var(--primary-500);
  text-decoration: none;
  font-weight: var(--font-weight-medium);
  transition: color var(--transition-fast);
}

.storyLink:hover {
  color: var(--primary-600);
}

.emptyState {
  text-align: center;
  padding: var(--space-16) var(--space-4);
}

.emptyIcon {
  font-size: 4rem;
  margin-bottom: var(--space-4);
}

.emptyState h3 {
  font-size: var(--font-size-xl);
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin-bottom: var(--space-3);
}

.emptyState p {
  color: var(--text-secondary);
  margin-bottom: var(--space-6);
  max-width: 400px;
  margin-left: auto;
  margin-right: auto;
  line-height: var(--line-height-relaxed);
}

.errorState {
  text-align: center;
  padding: var(--space-16) var(--space-4);
}

.errorState h1 {
  font-size: var(--font-size-2xl);
  color: var(--error-500);
  margin-bottom: var(--space-6);
}

/* Modal Styles */
.modal {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.8);
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 1000;
  padding: var(--space-4);
  animation: fadeIn 0.2s ease-out;
}

.modalContent {
  background-color: var(--bg-secondary);
  border-radius: var(--radius-xl);
  box-shadow: var(--shadow-xl);
  max-width: 800px;
  width: 100%;
  max-height: 90vh;
  overflow-y: auto;
  position: relative;
  animation: slideInFromBottom 0.3s ease-out;
}

.closeButton {
  position: absolute;
  top: var(--space-4);
  right: var(--space-4);
  background: var(--bg-tertiary);
  border: none;
  border-radius: 50%;
  width: 40px;
  height: 40px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: var(--text-secondary);
  transition: all var(--transition-fast);
  z-index: 1;
}

.closeButton:hover {
  background-color: var(--error-500);
  color: white;
}

.modalGrid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: var(--space-6);
  padding: var(--space-6);
}

@media (max-width: 768px) {
  .modalGrid {
    grid-template-columns: 1fr;
    gap: var(--space-4);
    padding: var(--space-4);
  }
}

.modalImage {
  position: relative;
}

.modalImage img {
  width: 100%;
  height: auto;
  border-radius: var(--radius-lg);
}

.modalDetails {
  display: flex;
  flex-direction: column;
  gap: var(--space-4);
}

.modalHeader {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: var(--space-3);
}

.modalTitle {
  font-size: var(--font-size-xl);
  font-weight: var(--font-weight-bold);
  color: var(--text-primary);
  line-height: var(--line-height-tight);
  flex: 1;
}

.modalDescription {
  color: var(--text-secondary);
  line-height: var(--line-height-relaxed);
}

.modalMeta {
  display: flex;
  flex-direction: column;
  gap: var(--space-3);
}

.metaItem {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.metaLabel {
  font-weight: var(--font-weight-medium);
  color: var(--text-secondary);
}

.metaValue {
  color: var(--text-primary);
}

.metaLink {
  color: var(--primary-500);
  text-decoration: none;
  font-weight: var(--font-weight-medium);
  transition: color var(--transition-fast);
}

.metaLink:hover {
  color: var(--primary-600);
}

.attributes {
  border-top: 1px solid var(--border-primary);
  padding-top: var(--space-4);
}

.attributesTitle {
  font-size: var(--font-size-lg);
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
  margin-bottom: var(--space-3);
}

.attributesList {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
  gap: var(--space-3);
}

.attribute {
  padding: var(--space-3);
  background-color: var(--bg-tertiary);
  border-radius: var(--radius-lg);
  text-align: center;
}

.attributeType {
  display: block;
  font-size: var(--font-size-xs);
  color: var(--text-tertiary);
  text-transform: uppercase;
  letter-spacing: 0.05em;
  margin-bottom: var(--space-1);
}

.attributeValue {
  display: block;
  font-weight: var(--font-weight-semibold);
  color: var(--text-primary);
}

.modalActions {
  display: flex;
  gap: var(--space-3);
  justify-content: flex-end;
  margin-top: auto;
  padding-top: var(--space-4);
  border-top: 1px solid var(--border-primary);
}

@media (max-width: 480px) {
  .modalActions {
    flex-direction: column;
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInFromBottom {
  from {
    opacity: 0;
    transform: translateY(20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}